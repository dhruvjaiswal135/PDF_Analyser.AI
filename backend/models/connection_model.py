from pydantic import BaseModel
from typing import List, Dict, Optional, Literal

class ConnectionRequest(BaseModel):
    selected_text: str
    current_document_id: str
    current_page: int
    context_before: Optional[str] = ""
    context_after: Optional[str] = ""

class DocumentConnection(BaseModel):
    title: str  # Heading from PDF outline
    type: str  # One word generated by LLM
    document: str  # Single PDF name
    pages: List[int]  # Page numbers where this appears
    snippet: str  # 2 sentences, max 20 words, generated by LLM
    strength: Literal["low", "medium", "high"]  # Generated by LLM

class ConnectionResponse(BaseModel):
    connections: List[DocumentConnection]
    summary: str  # LLM-generated summary
    processing_time: float